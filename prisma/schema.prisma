generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role{
  USER
  ADMIN
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

 
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  snippets      Snippet[]
  bookmarks     Bookmark[] 

 
  @@map("users")
}

model Snippet{
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String 
  description   String?
  code          String
  isPublic      Boolean @default(true)
  language      String?
  tags          String[] @default([])
  authorId      String   @db.ObjectId
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  

  author User @relation(fields: [authorId],references:[id])
}

model Bookmark {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  authorId  String    @db.ObjectId
  snippetIds String[] @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  author    User      @relation(fields: [authorId], references: [id])
  @@map("bookmarks")
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  otp       String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime  
}


 
